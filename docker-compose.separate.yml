# Docker Compose configuration for separate deployment testing
version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=pim_db
      - DB_USER=frappe
      - DB_PASSWORD=frappe123
      - REDIS_CACHE_URL=redis://redis:6379/0
      - REDIS_QUEUE_URL=redis://redis:6379/1
      - REDIS_SOCKETIO_URL=redis://redis:6379/2
      - SITE_NAME=backend.local
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
    depends_on:
      - db
      - redis
    volumes:
      - backend_data:/home/frappe/frappe-bench/sites
    networks:
      - pim_network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - pim_network

  # Database service
  db:
    image: mariadb:10.6
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=pim_db
      - MYSQL_USER=frappe
      - MYSQL_PASSWORD=frappe123
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - pim_network

  # Redis service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pim_network

  # Nginx reverse proxy (optional, for testing)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./deployment/nginx-proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - pim_network

volumes:
  db_data:
  redis_data:
  backend_data:

networks:
  pim_network:
    driver: bridge

